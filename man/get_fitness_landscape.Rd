% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_fitness_landscape.R
\name{get_fitness_landscape}
\alias{get_fitness_landscape}
\title{Compute the fitness along a range of trait values, given a community}
\usage{
get_fitness_landscape(
  z_seq,
  traits_comm,
  growth_rate = default_growth_rate(),
  competition_sd = default_competition_sd(),
  carrying_cap_opt = default_carrying_cap_opt(),
  carrying_cap_sd = default_carrying_cap_sd()
)
}
\arguments{
\item{z_seq}{numeric vector, the sequence of trait values along which the
fitness landscape should be computed.}

\item{traits_comm}{numeric vector, the trait values of all individuals in the
community for which the fitness landscape is to be computed}

\item{growth_rate}{numeric \verb{>= 0}, the baseline growth rate. Generations
being discrete, high values will cause chaos.}

\item{competition_sd}{numeric \verb{>= 0}.Parameter \eqn{\sigma_{\alpha}} of
the competition coefficient. Modulates the the strength of competition
between two individuals given their distance in trait space.}

\item{carrying_cap_opt}{numeric, value of the carrying capacity at
\code{trait_opt}}

\item{carrying_cap_sd}{numeric \verb{>= 0}. Parameter \eqn{\sigma_K} of the
carrying capacity. Modulates how fast the carrying capacity decays when
moving away from the optimal trait value.}
}
\value{
a \code{tibble} with \code{z_seq} rows and columns \code{z}, \code{fitness}.
}
\description{
Computes the fitness values at every point in \code{z_seq}, given the community
defined by \code{traits_comm}. This is different from \code{\link[=get_fitness]{get_fitness()}},
where the fitness is only computed for the trait values of individuals in the
community.
}
\author{
Th√©o Pannetier
}
