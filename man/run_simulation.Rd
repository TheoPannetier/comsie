% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_simulation.R
\name{run_simulation}
\alias{run_simulation}
\title{Run the simulation}
\usage{
run_simulation(
  path_to_output,
  nb_gens,
  immigration_rate = NA,
  mainland_nb_species,
  mainland_z_sd = 0.1,
  growth_rate = comrad::default_growth_rate(),
  competition_sd = comrad::default_competition_sd(),
  carrying_cap_sd = comrad::default_carrying_cap_sd(),
  carrying_cap_opt = comrad::default_carrying_cap_opt(),
  trait_opt = comrad::default_trait_opt(),
  prob_mutation = comrad::default_prob_mutation(),
  mutation_sd = comrad::default_mutation_sd(),
  trait_dist_sp = comrad::default_trait_dist_sp(),
  sampling_on_event = FALSE,
  sampling_freq = ifelse(sampling_on_event, NA, comrad::set_sampling_freq(nb_gens)),
  sampling_frac = comrad::default_sampling_frac(),
  seed = comrad::default_seed(),
  hpc_job_id = NULL,
  brute_force_opt = "none"
)
}
\arguments{
\item{path_to_output}{character, path to save the output file, which must be
a \code{.csv}. If \code{NULL}, the output is not saved and the final state of the
community is returned at the end of the simulation.}

\item{nb_gens}{integer, the number of generations to run the
simulation for.}

\item{immigration_rate}{\code{NA} or a positive number, the rate at which
external immigrant populations enter the community.}

\item{mainland_nb_species}{integer, the number of species in the island
community.}

\item{mainland_z_sd}{standard deviation of the trait distribution of mainland
species}

\item{growth_rate}{numeric \verb{>= 0}, the baseline growth rate. Generations
being discrete, high values will cause chaos.}

\item{competition_sd}{numeric \verb{>= 0}.Parameter \eqn{\sigma_{\alpha}} of
the competition coefficient. Modulates the the strength of competition
between two individuals given their distance in trait space.}

\item{carrying_cap_sd}{numeric \verb{>= 0}. Parameter \eqn{\sigma_K} of the
carrying capacity. Modulates how fast the carrying capacity decays when
moving away from the optimal trait value.}

\item{carrying_cap_opt}{numeric, value of the carrying capacity at
\code{trait_opt}}

\item{trait_opt}{numeric. The optimal trait value, \eqn{z_{opt}}.
\code{get_carrying_cap(trait_opt) = carrying_cap_opt}.}

\item{prob_mutation}{numeric between 0 and 1, the probability that any new
individual is sampled with a mutation.}

\item{mutation_sd}{numeric \verb{>= 0}, the standard deviation of the normal
distrbution from which mutations are drawn.}

\item{trait_dist_sp}{numeric, the minimal trait distance between two
clusters of individuals triggering speciation.}

\item{sampling_on_event}{logical. If \code{TRUE}, the community is sampled every
time a speciation or extinction happens, and \code{sampling_freq} is ignored and
must be set to \code{NA}.}

\item{sampling_freq}{numeric \code{> 0}, the frequency (in generations) at
which the community is written to output. See \code{\link[=set_sampling_freq]{set_sampling_freq()}} for the
default option.}

\item{sampling_frac}{numeric (between 0 and 1), fraction of the community
(in terms of individuals) written to output at every sampled generation. A
truncation is operated.}

\item{seed}{integer \code{> 0}, the seed to set for the random number
generator. Defaults to an integer based on current day and time.}

\item{hpc_job_id}{used to record a job ID in the metadata, only relevant for
simulations run on a high-performance cluster. Otherwise takes value
\code{"local"}.}

\item{brute_force_opt}{a string specifying which brute force option to use
to speed up the calculation of competition coefficients. Defaults to "none".
Other options are "omp", for multithreading with OpenMP, "simd" for single
instruction, multiple data (SIMD) via the C++ library
\href{https://github.com/xtensor-stack/xsimd}{\code{xsimd}}; and "simd_omp" for both.}
}
\value{
Returns a table with a row corresponding to each individual, and five
columns: \code{t} is the generation time, \code{z} the individual's trait value,
\code{species} the name of the species it belongs to, and \code{ancestral_species} the
previous species it descends from.
If \code{path_to_output = NULL}, the community at the last generation is returned.
If the path to a \code{.csv} file is supplied, each sampled generation is appended
to the file. In the \code{.csv}, the table is preceded by some lines of metadata,
which are automatically ignored if the file is read with \code{\link[=read_comrad_tbl]{read_comrad_tbl()}}.
}
\description{
Run the competitive radiation simulation.
}
\author{
Th√©o Pannetier
}
